class Notifier{constructor(options={}){this.display=true;this.refresh=false;this.redirectUrl=false;this.timeout=2800;this.debug=false;this.cssClass=".mc-message";if(typeof options==="object")this.set(options)}set(options){let instance=this;for(let key in options){if(options.hasOwnProperty(key))instance[key]=options[key]}}redirect(loc,timeout){timeout=typeof timeout!=="undefined"?timeout:2800;setTimeout((()=>window.location.href=loc),timeout)}reload(timeout){timeout=typeof timeout!=="undefined"?timeout:2800;setTimeout((()=>location.reload()),timeout)}notify(response,options={}){if(typeof options==="object")this.set(options);let notifier=this;if(notifier.display!==false&&notifier.cssClass!==""&&notifier.cssClass!==null&&notifier.cssClass!==undefined){if(notifier.debug)console.log(notifier.cssClass);forEach(notifier.cssClass,(i=>i.innerHTML=response))}if(notifier.redirectUrl&&typeof notifier.redirectUrl==="string"&&notifier.redirectUrl!=="")notifier.redirect(notifier.redirectUrl,notifier.timeout);if(notifier.refresh)notifier.reload(notifier.timeout)}close(){let notifier=this;if(notifier.display!==false&&notifier.cssClass!==""&&notifier.cssClass!==null&&notifier.cssClass!==undefined){if(notifier.debug)console.log(notifier.cssClass);forEach(notifier.cssClass,(i=>i.innerHTML=""))}}}