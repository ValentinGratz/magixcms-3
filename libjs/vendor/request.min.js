"use strict";class SimpleRequest{constructor(options={}){if(typeof axios==="undefined")throw new Error("axios is required by Request to run properly");this.request=null;this.settings={url:null,method:"get",baseURL:null,beforeSend:false,beforeSuccess:false,headers:null,params:null,data:false,timeout:0,withCredentials:false,auth:false,dataType:"json",responseEncoding:"utf8",xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",onUploadProgress:false,onDownloadProgress:false,validateStatus:function(status){return status>=200&&status<300},maxRedirects:5,socketPath:null,form:null,resetForm:false,error:function(error){console.log(error)},success:false,complete:false};if(typeof options==="object")this.set(options)}set(options){let instance=this.settings;for(var key in options){if(options.hasOwnProperty(key))instance[key]=options[key]}}prepare(){let params={url:this.settings.url,method:this.settings.method,timeout:this.settings.timeout,withCredentials:this.settings.withCredentials,responseType:this.settings.dataType,responseEncoding:this.settings.responseEncoding,xsrfCookieName:this.settings.xsrfCookieName,xsrfHeaderName:this.settings.xsrfHeaderName,onUploadProgress:this.settings.onUploadProgress,onDownloadProgress:this.settings.onDownloadProgress,validateStatus:this.settings.validateStatus,maxRedirects:this.settings.maxRedirects,socketPath:this.settings.socketPath};if(this.settings.baseURL!==null&&typeof this.settings.baseURL==="string")params["baseURL"]=this.settings.baseURL;if(this.settings.beforeSend!==false&&typeof this.settings.beforeSend==="object"&&(params.method==="post"||params.method==="put"||params.method==="delete"))params["transformRequest"]=this.settings.beforeSend;if(this.settings.beforeSuccess!==false&&typeof this.settings.beforeSuccess==="object")params["transformResponse"]=this.settings.beforeSuccess;if(this.settings.headers!==null&&typeof this.settings.headers==="object")params["headers"]=this.settings.headers;if(this.settings.params!==null&&typeof this.settings.params==="object")params["params"]=this.settings.params;if(this.settings.data!==false&&typeof this.settings.data==="object"&&(params.method==="post"||params.method==="put"||params.method==="delete"))params["data"]=this.settings.data;if(this.settings.auth!==null&&typeof this.settings.auth==="object")params["auth"]=this.settings.auth;return params}create(options){let SR=this;if(typeof options==="object")SR.set(options);SR.request=axios.create(SR.prepare())}exec(options){let SR=this;if(SR.request===null)SR.create(options);else if(Object.keys(data).length!==0&&options.constructor===Object)SR.set(options);if(typeof SR.settings.url!=="string"||SR.settings.url==="")throw new Error("The target url is not a string or empty");console.log(SR.settings);SR.request.request(SR.settings).then((function(response){if(SR.settings.success!==false)SR.settings.success(response)})).catch((function(error){if(SR.settings.error!==false)SR.settings.error(error)})).finally((function(){if(SR.settings.complete!==false)SR.settings.complete();if(isElement(SR.settings.form)&&SR.settings.form.nodeName==="FORM"&&SR.settings.resetForm)SR.settings.form.reset()}))}get(url,options){let SR=this;if(typeof url!=="string"||url==="")throw new Error("The target url is not a string or empty");if(SR.request===null)SR.create(options);SR.request.get(url).then((function(response){if(SR.settings.success!==false)SR.settings.success(response)})).catch((function(error){if(SR.settings.error!==false)SR.settings.error(error)})).finally((function(){if(SR.settings.complete!==false)SR.settings.complete();if(isElement(SR.settings.form)&&SR.settings.form.nodeName==="FORM"&&SR.settings.resetForm)SR.settings.form.reset()}))}post(url,data,options){let SR=this;if(typeof url!=="string"||url==="")throw new Error("The target url is not a string or empty");if(Object.keys(data).length===0&&data.constructor===Object||data.constructor!==FormData&&data.constructor!==Object)data={};if(SR.request===null)SR.create(options);SR.request.post(url,data).then((function(response){if(SR.settings.success!==false)SR.settings.success(response)})).catch((function(error){if(SR.settings.error!==false)SR.settings.error(error)})).finally((function(){if(isElement(SR.settings.form)&&SR.settings.form.nodeName==="FORM"&&SR.settings.resetForm)SR.settings.form.reset();if(SR.settings.complete!==false)SR.settings.complete()}))}put(url,data,options){let SR=this;if(typeof url!=="string"||url==="")throw new Error("The target url is not a string or empty");if(Object.keys(data).length===0&&data.constructor===Object||data.constructor!==FormData&&data.constructor!==Object)data={};if(SR.request===null)SR.create(options);SR.request.put(url,data).then((function(response){if(SR.settings.success!==false)SR.settings.success(response)})).catch((function(error){if(SR.settings.error!==false)SR.settings.error(error)})).finally((function(){if(SR.settings.complete!==false)SR.settings.complete();if(isElement(SR.settings.form)&&SR.settings.form.nodeName==="FORM"&&SR.settings.resetForm)SR.settings.form.reset()}))}delete(url,options){let SR=this;if(typeof url!=="string"||url==="")throw new Error("The target url is not a string or empty");if(SR.request===null)SR.create(options);SR.request.delete(url).then((function(response){if(SR.settings.success!==false)SR.settings.success(response)})).catch((function(error){if(SR.settings.error!==false)SR.settings.error(error)})).finally((function(){if(SR.settings.complete!==false)SR.settings.complete();if(isElement(SR.settings.form)&&SR.settings.form.nodeName==="FORM"&&SR.settings.resetForm)SR.settings.form.reset()}))}intercept(on,beforeSuccess,error){if(this.request!==null){if(on==="request"){this.request.interceptors.request.use((function(config){beforeSuccess(config);return config}),(function(error){error(error);return Promise.reject(error)}))}if(on==="response"){this.request.interceptors.response.use((function(response){beforeSuccess(response);return response}),(function(error){error(error);return Promise.reject(error)}))}}}}